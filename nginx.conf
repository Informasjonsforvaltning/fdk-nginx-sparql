worker_processes auto;

events {
    worker_connections 1024;
}
http {
    map $http_x_forwarded_for $client_ip {
    # Default to $remote_addr if X-Forwarded-For is empty
    "" $remote_addr;
    # Extract the second to last IP
    ~^(?:[^,]+,)*([^,]+),[^,]+$ $1;
    # Use the only IP if there's just one
    ~^[^,]+$ $1;
    }
    limit_req_zone $client_ip zone=addr_limit:10m rate=5r/s;
    limit_req_status 429;

    server_tokens off;
    ## Main Server Block
    server {
        # Use the mapped $client_ip
        set_real_ip_from 10.0.0.0/8;
        real_ip_header X-Forwarded-For;
        real_ip_recursive on;

        ## Open by default.
        listen                8080;
        server_name           default_server;
        client_max_body_size  200M;

        # Enable compression both for HTTP/1.0 and HTTP/1.1.
        gzip_http_version  1.1;

        # Compression level (1-9).
        # 5 is a perfect compromise between size and cpu usage, offering about
        # 75% reduction for most ascii files (almost identical to level 9).
        gzip_comp_level    5;

        # Gzip compression
        gzip on;
        gzip_types      text/plain text/turtle;
        gzip_proxied    no-cache no-store private expired auth;
        gzip_min_length 1000;

        # Compress data even for clients that are connecting to us via proxies,
        # identified by the "Via" header (required for CloudFront).
        gzip_proxied       any;

        # Tell proxies to cache both the gzipped and regular version of a resource
        # whenever the client's Accept-Encoding capabilities header varies;
        # Avoids the issue where a non-gzip capable client (which is extremely rare
        # today) would display gibberish if their proxy gave them the gzipped version.
        gzip_vary          on;

        add_header 'Vary' 'Accept, Accept-Encoding';
        add_header X-Robots-Tag 'noindex, nofollow, nosnippet, noarchive' always;

        #healthcheck
        location /ready {
            return 200;
        }

        #livenesscheck
        location /ping {
            return 200;
        }

        #frontend
        location /sparql {
            # Add headers for rate limiting
            add_header X-RateLimit-Limit 5 always;
            add_header X-RateLimit-Burst 30 always;
            add_header X-RateLimit-Delay 20 always;
            limit_req zone=addr_limit burst=30 delay=5;
            proxy_pass http://fdk-sparql-gui:8080;
        }

        location / {
            add_header 'Access-Control-Allow-Origin' 'data.norge.no';
            # Add headers for rate limiting
            add_header X-RateLimit-Limit 5 always;
            add_header X-RateLimit-Burst 10 always;
            add_header X-RateLimit-Delay 5 always;
            limit_req zone=addr_limit burst=10 delay=5;

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                #
                # Custom headers and headers various browsers *should* be OK with but aren't
                #
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                #
                # Tell client that this pre-flight info is valid for 20 days
                #
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            }
            if ($request_method = 'GET') {
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            }
            rewrite /(.*) /fuseki/fdk/query$1 break;
            proxy_pass http://fdk-sparql-service:8080;
        }

    }
}
